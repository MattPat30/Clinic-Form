---
include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: |
    Clinical Programs Case Opening Form
  short title: |
    Case Opening Form
  authors:
    - LIT Lab
---
mandatory: True
comment: |
  This contains metadata that will not be overwritten if this YAML file is included in another
  file. Each file gets its own key in the interview_metadata dictionary.
  Most keys are not currently used at runtime, other than "allowed courts".
code: |
  interview_metadata
  if not defined("interview_metadata['Clinical_Programs_Case_Opening_Form']"):
    interview_metadata.initializeObject("Clinical_Programs_Case_Opening_Form")
    interview_metadata["Clinical_Programs_Case_Opening_Form"].update({
      "al_weaver_version": "1.2.3",
      "generated on": "2021-10-13",
      "title": "Clinical Programs Case Opening Form",
      "short title": "Case Opening Form",
      "description": "Clinical Programs Case Opening Form",
      "original_form": "",
      "allowed courts": [
      ],
      "categories": [
      ],        
      "logic block variable": "interview_order_Clinical_Programs_Case_Opening_Form",
      "attachment block variable": "Clinical_Programs_Case_Opening_Form_attachment",
      "typical role": "unknown",
    })
---
code: |
  interview_metadata['main_interview_key'] =  'Clinical_Programs_Case_Opening_Form'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-ClinicalProgramsCaseOpeningForm'
---
code: |
  interview_short_title = "Fill Out Clinical Programs Case Opening Form"
---
code: |
  al_form_type = 'other_form'
---
objects:
  - Supervisor: ALPeopleList.using(ask_number=True,target_number=1)
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - Judge: ALPeopleList
  - Student_Atty: ALPeopleList.using(there_are_any=True)
  - Contact: ALPeopleList.using(ask_number=True,target_number=1)
  - Client: ALPeopleList.using(ask_number=True,target_number=1)
  - opp: ALPeopleList
---
sections:
  - review_Clinical_Programs_Case_Opening_Form: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_Clinical_Programs_Case_Opening_Form
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["Clinical_Programs_Case_Opening_Form"]["allowed courts"]
  nav.set_section('review_Clinical_Programs_Case_Opening_Form')
  # Below sets the user_role by asking a question.
  # You can set user_role directly instead to either 'plaintiff' or 'defendant'
  user_ask_role
  Today_date
  Case_Description
  client_birthdate
  opp_DateOfBirth
  Contact1_relation
  set_progress(8)
  ConflictCheckResultsAttached
  opp.gather()
  Client[0].address.address
  Contact[0].address.address
  Contact.gather()
  set_progress(16)
  Contact[1].address.address
  Client[0].email
  opp[0].address.address
  Contact[3].phone_number
  Contact[1].address.address
  set_progress(25)
  Contact[0].address.address
  Client[0].gender
  Contact[3].email
  Contact.gather()
  Contact[0].address.address
  set_progress(33)
  Contact[1].phone_number
  Contact[2].phone_number
  Contact[3].address.address
  Client[0].address.address
  Client[0].address.address
  set_progress(41)
  opp[0].address.address
  Contact[2].address.address
  Contact[3].address.address
  opp[0].phone_number
  Contact.gather()
  set_progress(50)
  Contact[3].address.address
  Contact[1].email
  Contact[0].email
  Supervisor.gather()
  Contact[2].address.address
  set_progress(58)
  opp[0].email
  Contact[0].address.address
  Contact[2].address.address
  Contact[1].address.address
  Student_Atty.gather()
  set_progress(66)
  Judge.gather()
  Contact[3].address.address
  Contact.gather()
  Contact[0].phone_number
  Contact[2].email
  set_progress(75)
  Contact[2].address.address
  opp[0].address.address
  Contact[1].address.address
  interview_order_Clinical_Programs_Case_Opening_Form = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  Clinical_Programs_Case_Opening_Form_intro
  interview_order_Clinical_Programs_Case_Opening_Form
  signature_date
  # Save anonymized interview statistics (customize the saved data below)
  store_variables_snapshot(data={'zip': users[0].address.zip})
  Clinical_Programs_Case_Opening_Form_preview_question
  basic_questions_signature_flow
  Clinical_Programs_Case_Opening_Form_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Clinical_Programs_Case_Opening_Form
continue button field: Clinical_Programs_Case_Opening_Form_intro
question: |
  Clinical Programs Case Opening Form
subquestion: |
  This Form is for opening a case.  This form is intended only to be used by the Suffolk Law Clinical Programs.
---
id: Background Information
question: |
  Background Information
fields:
  - "Today\'s Date": Today_date
    datatype: date
  - "Clinic Practice Area": Clinic_Practice_Area
    maxlength: 28
---
id: Case Information
question: |
  Case Information
fields:
  - "Description of Case": Case_Description
    maxlength: 42
  - "Court Or Agency": Court_Agency
    maxlength: 42
  - "Court or Agency Docket  Number": Court_Agency_Docket__number
    maxlength: 96
  - "Referral source": Referral_Source
    maxlength: 84
  - "Scope of representation": Scope_Of_Representation
    maxlength: 96
  - "Case type": Case_Type
    maxlength: 90
  - "Case  synopsis": Case__synopsis
    input type: area
    maxlength: 910
---
id: Client Information
question: |
  Client Information
fields:
  - "Client Birthdate": client_birthdate
    maxlength: 12
  - "Client name": Client_Name
    maxlength: 80
  - "Client Company": Client_Company
    maxlength: 50
  - "Client Title": Client_title
    maxlength: 40
  - "Client marital status": Client_MaritalStatus
    maxlength: 98
  - "Client Aliases": Client_Aliases
    maxlength: 80
  - "Public Housing": Client_Public_Housing
    datatype: yesno
  - "Client Phone number": client_phone_number
    maxlength: 42
  - "Client Alternative Number": client_other1_number
    maxlength: 38
  - "Client Other Number": client_other2_number
    maxlength: 100
  - "Client Interpreter": Client_Interpreter
    maxlength: 17
  - "Client primary languages": Client_Primary_Languages
    maxlength: 38
  - "Client race": Client_Race
    maxlength: 100
  - "Client immigration status": Client_Imm_Status
    maxlength: 21
  - "Client household income": Client_Income
    maxlength: 40
  - "Client source of income": Client_Source_Income
    maxlength: 100
  - "Number of dependents": Client_NumberOfDependents
    maxlength: 96
  - "Number of individuals in household": Client_Number_Household
    maxlength: 78
  - "Notes about Client": Client_Notes
    input type: area
    maxlength: 360
---
id: Opposition Information
question: |
  Opposition Information
fields:
  - "Opposition date of birth": opp_DateOfBirth
    maxlength: 11
  - "Opposition gender expression": opp_GenderExpression
    maxlength: 66
  - "Opposition title": opp_title
    maxlength: 80
  - "Opposition company": opp_company
    maxlength: 100
  - "Opposition aliases": opp_Aliases_names
    input type: area
    maxlength: 180
  - "Opposition Alternative number": opp_alt1_number
    maxlength: 38
  - "Opposition Other Alternative number": opp_alt2_number
    maxlength: 50
  - "Opposition interpreter": Opp_Interpreter
    maxlength: 12
  - "Opposition primary languages": opp_PrimaryLanguages
    maxlength: 38
  - "Opposition Notes": opp_Notes
    input type: area
    maxlength: 270
---
id: Other Contacts
question: |
  Other Contacts
fields:
  - "Contact 1 Relation": Contact1_relation
    maxlength: 50
  - "Contact 1 is address the same?": Contact1_Address_same
    datatype: yesno
  - "Contact 2 relation": Contact2_relation
    maxlength: 50
  - "Contact 2 other number": Contact2_other_number
    maxlength: 18
  - "Contact 2 is address the same?": Contact2_Address_same
    datatype: yesno
  - "Contact 3 relation": Contact3_relation
    maxlength: 50
  - "Contact 3 other number": Contact3_other_number
    maxlength: 18
  - "Contact 3 is address the same?": Contact3_Address_same
    datatype: yesno
  - "Contact 4 relation": Contact4_relation
    maxlength: 50
  - "Contact 4 other number": Contact4_other_number
    maxlength: 18
  - "Contact 4 is address the same?": Contact4_Address_same
    datatype: yesno
---
id: Conflict Information
question: |
  Conflict Information
fields:
  - "Conflict Check Results Attached": ConflictCheckResultsAttached
    datatype: yesno
  - "Conflict Check Complete": ConflictCheckComplete
    datatype: yesno
  - "Date of Conflict Check": Date_ConflictCheck
    datatype: date
  - "Conflict Check Description": Description_Conflict
    input type: area
    maxlength: 294
---
id: preview Clinical_Programs_Case_Opening_Form
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_recipient_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Make changes" button
  to edit your answers.

  ${ action_button_html(url_action('review_Clinical_Programs_Case_Opening_Form'), label='Make changes', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: Clinical_Programs_Case_Opening_Form_preview_question    
---
code: |
  signature_fields = []
---
id: Clinical Programs Case Opening Form review screen
event: review_Clinical_Programs_Case_Opening_Form
question: |
  Review your answers
review:
  - Edit: Today_date
    button: |
      **Today\'s Date**:
      ${ Today_date }
  - Edit: Clinic_Practice_Area
    button: |
      **Clinic Practice Area**:
      ${ Clinic_Practice_Area }
  - Edit: ConflictCheckResultsAttached
    button: |
      **Conflict Check Results Attached**:
      ${ word(yesno(ConflictCheckResultsAttached)) }
  - Edit: ConflictCheckComplete
    button: |
      **Conflict Check Complete**:
      ${ word(yesno(ConflictCheckComplete)) }
  - Edit: Date_ConflictCheck
    button: |
      **Date of Conflict Check**:
      ${ Date_ConflictCheck }
  - Edit: Description_Conflict
    button: |
      **Conflict Check Description**:
      > ${ single_paragraph(Description_Conflict) }
  - Edit: Case_Description
    button: |
      **Description of Case**:
      ${ Case_Description }
  - Edit: Court_Agency
    button: |
      **Court Or Agency**:
      ${ Court_Agency }
  - Edit: Court_Agency_Docket__number
    button: |
      **Court or Agency Docket  Number**:
      ${ Court_Agency_Docket__number }
  - Edit: Referral_Source
    button: |
      **Referral source**:
      ${ Referral_Source }
  - Edit: Scope_Of_Representation
    button: |
      **Scope of representation**:
      ${ Scope_Of_Representation }
  - Edit: Case_Type
    button: |
      **Case type**:
      ${ Case_Type }
  - Edit: Case__synopsis
    button: |
      **Case  synopsis**:
      > ${ single_paragraph(Case__synopsis) }
  - Edit: client_birthdate
    button: |
      **Client Birthdate**:
      ${ client_birthdate }
  - Edit: Client_Name
    button: |
      **Client name**:
      ${ Client_Name }
  - Edit: Client_Company
    button: |
      **Client Company**:
      ${ Client_Company }
  - Edit: Client_title
    button: |
      **Client Title**:
      ${ Client_title }
  - Edit: Client_MaritalStatus
    button: |
      **Client marital status**:
      ${ Client_MaritalStatus }
  - Edit: Client_Aliases
    button: |
      **Client Aliases**:
      ${ Client_Aliases }
  - Edit: Client_Public_Housing
    button: |
      **Public Housing**:
      ${ word(yesno(Client_Public_Housing)) }
  - Edit: client_phone_number
    button: |
      **Client Phone number**:
      ${ client_phone_number }
  - Edit: client_other1_number
    button: |
      **Client Alternative Number**:
      ${ client_other1_number }
  - Edit: client_other2_number
    button: |
      **Client Other Number**:
      ${ client_other2_number }
  - Edit: Client_Interpreter
    button: |
      **Client Interpreter**:
      ${ Client_Interpreter }
  - Edit: Client_Primary_Languages
    button: |
      **Client primary languages**:
      ${ Client_Primary_Languages }
  - Edit: Client_Race
    button: |
      **Client race**:
      ${ Client_Race }
  - Edit: Client_Imm_Status
    button: |
      **Client immigration status**:
      ${ Client_Imm_Status }
  - Edit: Client_Income
    button: |
      **Client household income**:
      ${ Client_Income }
  - Edit: Client_Source_Income
    button: |
      **Client source of income**:
      ${ Client_Source_Income }
  - Edit: Client_NumberOfDependents
    button: |
      **Number of dependents**:
      ${ Client_NumberOfDependents }
  - Edit: Client_Number_Household
    button: |
      **Number of individuals in household**:
      ${ Client_Number_Household }
  - Edit: Client_Notes
    button: |
      **Notes about Client**:
      > ${ single_paragraph(Client_Notes) }
  - Edit: opp_DateOfBirth
    button: |
      **Opposition date of birth**:
      ${ opp_DateOfBirth }
  - Edit: opp_GenderExpression
    button: |
      **Opposition gender expression**:
      ${ opp_GenderExpression }
  - Edit: opp_title
    button: |
      **Opposition title**:
      ${ opp_title }
  - Edit: opp_company
    button: |
      **Opposition company**:
      ${ opp_company }
  - Edit: opp_Aliases_names
    button: |
      **Opposition aliases**:
      > ${ single_paragraph(opp_Aliases_names) }
  - Edit: opp_alt1_number
    button: |
      **Opposition Alternative number**:
      ${ opp_alt1_number }
  - Edit: opp_alt2_number
    button: |
      **Opposition Other Alternative number**:
      ${ opp_alt2_number }
  - Edit: Opp_Interpreter
    button: |
      **Opposition interpreter**:
      ${ Opp_Interpreter }
  - Edit: opp_PrimaryLanguages
    button: |
      **Opposition primary languages**:
      ${ opp_PrimaryLanguages }
  - Edit: opp_Notes
    button: |
      **Opposition Notes**:
      > ${ single_paragraph(opp_Notes) }
  - Edit: Contact1_relation
    button: |
      **Contact 1 Relation**:
      ${ Contact1_relation }
  - Edit: Contact1_Address_same
    button: |
      **Contact 1 is address the same?**:
      ${ word(yesno(Contact1_Address_same)) }
  - Edit: Contact2_relation
    button: |
      **Contact 2 relation**:
      ${ Contact2_relation }
  - Edit: Contact2_other_number
    button: |
      **Contact 2 other number**:
      ${ Contact2_other_number }
  - Edit: Contact2_Address_same
    button: |
      **Contact 2 is address the same?**:
      ${ word(yesno(Contact2_Address_same)) }
  - Edit: Contact3_relation
    button: |
      **Contact 3 relation**:
      ${ Contact3_relation }
  - Edit: Contact3_other_number
    button: |
      **Contact 3 other number**:
      ${ Contact3_other_number }
  - Edit: Contact3_Address_same
    button: |
      **Contact 3 is address the same?**:
      ${ word(yesno(Contact3_Address_same)) }
  - Edit: Contact4_relation
    button: |
      **Contact 4 relation**:
      ${ Contact4_relation }
  - Edit: Contact4_other_number
    button: |
      **Contact 4 other number**:
      ${ Contact4_other_number }
  - Edit: Contact4_Address_same
    button: |
      **Contact 4 is address the same?**:
      ${ word(yesno(Contact4_Address_same)) }
  - Edit: opp.revisit
    button: |
      **Opp**

      % for item in opp:
        * ${ item }
      % endfor
  - Edit: Client.revisit
    button: |
      **Client**

      % for item in Client:
        * ${ item }
      % endfor
  - Edit: Contact.revisit
    button: |
      **Contact**

      % for item in Contact:
        * ${ item }
      % endfor
  - Edit: Supervisor.revisit
    button: |
      **Supervisor**

      % for item in Supervisor:
        * ${ item }
      % endfor
  - Edit: Student_Atty.revisit
    button: |
      **Student atty**

      % for item in Student_Atty:
        * ${ item }
      % endfor
  - Edit: Judge.revisit
    button: |
      **Judge**

      % for item in Judge:
        * ${ item }
      % endfor
---
continue button field: opp.revisit
question: |
  Edit opp
subquestion: |
  ${ opp.table }

  ${ opp.add_action() }
---
table: opp.table
rows: opp
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - name.first
  - address.address
  - phone_number
  - email
confirm: True

---
continue button field: Client.revisit
question: |
  Edit Client
subquestion: |
  ${ Client.table }

  ${ Client.add_action() }
---
table: Client.table
rows: Client
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.zip") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Gender: |
      row_item.gender if defined("row_item.gender") else ""
edit:
  - address.zip
  - email
  - gender
confirm: True

---
continue button field: Contact.revisit
question: |
  Edit Contact
subquestion: |
  ${ Contact.table }

  ${ Contact.add_action() }
---
table: Contact.table
rows: Contact
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.city") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
edit:
  - address.city
  - name.first
  - phone_number
  - email
confirm: True

---
continue button field: Supervisor.revisit
question: |
  Edit Supervisor
subquestion: |
  ${ Supervisor.table }

  ${ Supervisor.add_action() }
---
table: Supervisor.table
rows: Supervisor
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: Student_Atty.revisit
question: |
  Edit Student_Atty
subquestion: |
  ${ Student_Atty.table }

  ${ Student_Atty.add_action() }
---
table: Student_Atty.table
rows: Student_Atty
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: Judge.revisit
question: |
  Edit Judge
subquestion: |
  ${ Judge.table }

  ${ Judge.add_action() }
---
table: Judge.table
rows: Judge
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download Clinical_Programs_Case_Opening_Form
event: Clinical_Programs_Case_Opening_Form_download
question: |
  Your form is ready to download.
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Make changes" button to fix any mistakes.

  ${ action_button_html(url_action('review_Clinical_Programs_Case_Opening_Form'), label='Make changes', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
objects:
  - Post_interview_instructions: ALDocument.using(title="Instructions", filename="Clinical_Programs_Case_Opening_Form_next_steps.docx", enabled=True, has_addendum=False)
  - Clinical_Programs_Case_Opening_Form_attachment: ALDocument.using(title="Clinical Programs Case Opening Form", filename="Clinical_Programs_Case_Opening_Form_1.pdf", enabled=True, has_addendum=False)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[Post_interview_instructions,Clinical_Programs_Case_Opening_Form_attachment], filename="Clinical_Programs_Case_Opening_Form_package.pdf", title="All forms to download for your records", enabled=True)
  - al_recipient_bundle: ALDocumentBundle.using(elements=[Clinical_Programs_Case_Opening_Form_attachment], filename="Clinical_Programs_Case_Opening_Form_package.pdf", title="All forms to download for your records", enabled=True)
---
attachments:
  - name: Post interview instructions
    filename: Post-interview-instructions     
    variable name: Post_interview_instructions[i]        
    docx template file: Clinical_Programs_Case_Opening_Form_next_steps.docx
  - name: Clinical Programs Case Opening Form attachment
    filename: Clinical_Programs_Case_Opening_Form     
    variable name: Clinical_Programs_Case_Opening_Form_attachment[i]        
    skip undefined: True
    pdf template file: Clinical_Programs_Case_Opening_Form_1.pdf
    fields:
      - "opp_name": ${ opp[0] }
      - "Client_address_city": ${ Client[0].address.city }
      - "Contact1_address_street": ${ Contact[0].address.address }
      - "Contact4_name": ${ Contact[3] }
      - "Contact2_address_zip": ${ Contact[1].address.zip }
      - "Client_email": ${ Client[0].email }
      - "opp_address_zip": ${ opp[0].address.zip }
      - "Contact4_phone_number": ${ Contact[3].phone_number }
      - "Contact2_address_state": ${ Contact[1].address.state }
      - "Contact1_address_city": ${ Contact[0].address.city }
      - "Client_gender": ${ Client[0].gender }
      - "Contact4_email": ${ Contact[3].email }
      - "Contact2_name": ${ Contact[1] }
      - "Contact1_address_state": ${ Contact[0].address.state }
      - "Contact2_phone_number": ${ Contact[1].phone_number }
      - "Contact3_phone_number": ${ Contact[2].phone_number }
      - "Contact4_address_city": ${ Contact[3].address.city }
      - "Client_address_street": ${ Client[0].address.address }
      - "Client_address_zip": ${ Client[0].address.zip }
      - "opp_address_city": ${ opp[0].address.city }
      - "Contact3_address_state": ${ Contact[2].address.state }
      - "Contact4_address_zip": ${ Contact[3].address.zip }
      - "opp_phone_number": ${ opp[0].phone_number }
      - "Contact1_name": ${ Contact[0] }
      - "Contact4_address_state": ${ Contact[3].address.state }
      - "Contact2_email": ${ Contact[1].email }
      - "Contact1_email": ${ Contact[0].email }
      - "Supervisor_name": ${ Supervisor[0] }
      - "Contact3_address_city": ${ Contact[2].address.city }
      - "opp_email": ${ opp[0].email }
      - "Contact1_address_zip": ${ Contact[0].address.zip }
      - "Contact3_address_street": ${ Contact[2].address.address }
      - "Contact2_address_street": ${ Contact[1].address.address }
      - "Student_Atty_name": ${ Student_Atty[0] }
      - "Judge_name": ${ Judge[0] }
      - "Contact4_address_street": ${ Contact[3].address.address }
      - "Contact3_name": ${ Contact[2] }
      - "Contact1_phone_number": ${ Contact[0].phone_number }
      - "Contact3_email": ${ Contact[2].email }
      - "Contact3_address_zip": ${ Contact[2].address.zip }
      - "opp_address_street": ${ opp[0].address.address }
      - "Contact2_address_city": ${ Contact[1].address.city }
      - "Today_date": ${ Today_date }
      - "Clinic_Practice_Area": ${ Clinic_Practice_Area }
      - "ConflictCheckResultsAttached": ${ ConflictCheckResultsAttached }
      - "ConflictCheckComplete": ${ ConflictCheckComplete }
      - "Date_ConflictCheck": ${ Date_ConflictCheck }
      - "Description_Conflict": ${ Description_Conflict }
      - "Case_Description": ${ Case_Description }
      - "Court_Agency": ${ Court_Agency }
      - "Court_Agency_Docket__number": ${ Court_Agency_Docket__number }
      - "Referral_Source": ${ Referral_Source }
      - "Scope_Of_Representation": ${ Scope_Of_Representation }
      - "Case_Type": ${ Case_Type }
      - "Case__synopsis": ${ Case__synopsis }
      - "client_birthdate": ${ client_birthdate }
      - "Client_Name": ${ Client_Name }
      - "Client_Company": ${ Client_Company }
      - "Client_title": ${ Client_title }
      - "Client_MaritalStatus": ${ Client_MaritalStatus }
      - "Client_Aliases": ${ Client_Aliases }
      - "Client_Public_Housing": ${ Client_Public_Housing }
      - "client_phone_number": ${ client_phone_number }
      - "client_other1_number": ${ client_other1_number }
      - "client_other2_number": ${ client_other2_number }
      - "Client_Interpreter": ${ Client_Interpreter }
      - "Client_Primary_Languages": ${ Client_Primary_Languages }
      - "Client_Race": ${ Client_Race }
      - "Client_Imm_Status": ${ Client_Imm_Status }
      - "Client_Income": ${ Client_Income }
      - "Client_Source_Income": ${ Client_Source_Income }
      - "Client_NumberOfDependents": ${ Client_NumberOfDependents }
      - "Client_Number_Household": ${ Client_Number_Household }
      - "Client_Notes": ${ Client_Notes }
      - "opp_DateOfBirth": ${ opp_DateOfBirth }
      - "opp_GenderExpression": ${ opp_GenderExpression }
      - "opp_title": ${ opp_title }
      - "opp_company": ${ opp_company }
      - "opp_Aliases_names": ${ opp_Aliases_names }
      - "opp_alt1_number": ${ opp_alt1_number }
      - "opp_alt2_number": ${ opp_alt2_number }
      - "Opp_Interpreter": ${ Opp_Interpreter }
      - "opp_PrimaryLanguages": ${ opp_PrimaryLanguages }
      - "opp_Notes": ${ opp_Notes }
      - "Contact1_relation": ${ Contact1_relation }
      - "Contact1_Address_same": ${ Contact1_Address_same }
      - "Contact2_relation": ${ Contact2_relation }
      - "Contact2_other_number": ${ Contact2_other_number }
      - "Contact2_Address_same": ${ Contact2_Address_same }
      - "Contact3_relation": ${ Contact3_relation }
      - "Contact3_other_number": ${ Contact3_other_number }
      - "Contact3_Address_same": ${ Contact3_Address_same }
      - "Contact4_relation": ${ Contact4_relation }
      - "Contact4_other_number": ${ Contact4_other_number }
      - "Contact4_Address_same": ${ Contact4_Address_same }
